version: "3.7"
services:
  nginx:
    image: nginx:alpine
    container_name: drone_nginx
    ports:
      - "8010:80"
    restart: always
    networks:
      - dronenet
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d:rw
      
  mysql:
    image: mysql
    restart: always
    container_name: drone_mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=drone
      - MYSQL_USER=drone
      - MYSQL_PASSWORD=drone_password
    networks:
      - dronenet
    volumes:
      - ./mysql/conf/my.cnf:/etc/mysql/my.cnf:rw
      - ./mysql/data:/var/lib/mysql/:rw
      - ./mysql/logs:/var/log/mysql/:rw

  drone-server:
    image: drone/drone:latest #不要用latest,latest并非稳定版本
    container_name: dronetest_server
    networks: 
      - dronenet
    volumes:
      # - ./drone_server/drone:/var/lib/drone/:rw
      - ./drone_server/data:/data:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
    restart: always
    ports:
      - 8000:80
    environment:
      # db Config
      - DRONE_DATABASE_DATASOURCE=drone:drone_password@tcp(drone_mysql:3306)/drone?parseTime=true   #mysql配置，要与上边mysql容器中的配置一致
      - DRONE_DATABASE_DRIVER=mysql
      - DRONE_SERVER_HOST=192.168.0.90:8000
      - DRONE_SERVER_PROTO=http   #这个配置决定了你激活时仓库中的webhook地址的proto
      - DRONE_TLS_AUTOCERT=false
      - DRONE_RPC_SECRET=c48913e41c401373d50bab83599ce1cc  #RPC秘钥
      - DRONE_AGENTS_ENABLED=true
      - DRONE_USER_CREATE=username:zhaobu,admin:true  #管理员账号，一般是你github用户名
        # GitHub Config
      - DRONE_GITHUB_SERVER=https://github.com
      - DRONE_GITHUB_CLIENT_ID=b49035f644315c2cf71a  #Github Client ID
      - DRONE_GITHUB_CLIENT_SECRET=4c45343ac59225fb7f823b6fdc51f9c3fbfd6fcc #Github Client Secret
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_COLOR=true
      - DRONE_LOGS_TEXT=true
  drone-agent:
    image: drone/agent:latest
    container_name: dronetest_agent
    restart: always
    networks: 
      - dronenet
    depends_on:
      - drone-server  #依赖drone_server，并在其后启动
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    environment:
      - DRONE_RPC_SERVER=http://drone-server
      - DRONE_RPC_HOST=192.168.0.90:8000 #drone用的http请求包，url一定要写上协议才能支持
      - DRONE_RPC_SECRET=c48913e41c401373d50bab83599ce1cc  #RPC秘钥，要与drone_server中的一致
      - DRONE_DEBUG=true
      # - DRONE_SERVER_PROTO=http #这个配置决定了你激活时仓库中的webhook地址的proto
      - DRONE_RUNNER_CAPACITY=1
networks:
  dronenet:
